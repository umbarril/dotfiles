###################
### VARIABLES ###
###################

# See https://wiki.hyprland.org/Configuring/Keywords/

# Set programs that you use
# $terminal = kitty  --single-instance --hold zsh -c "fortune | cowsay -f vader"
$terminal = kitty --single-instance --hold zsh -c "pokeget-gen1.sh"

# nautilus just doesn't work properly on my machine for whatever reason
# $fileManager = nautilus 
$fileManager = nemo
# $fileManager = spacedrive # not polished yet, maybe look at this in 6 months (half of 2025)

$menu = rofi -combi-modi window,drun,ssh -show combi -show-icons

$powerMenu = wlogout.sh

# TODO: install rofi-nerdy
$emojiMenu = rofi -modi emoji -show emoji

# not being used
$configMenu = rofi -show drun -modi drun -drun-categories System,Settings
$gameMenu = rofi -show drun -modi drun -drun-categories Game

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier

####################
### KEYBINDINGSS ###
####################

# bind sufixes:
# l -> locked, will also work when an input inhibitor (e.g. a lockscreen) is active.
# r -> release, will trigger on release of a key.
# e -> repeat, will repeat when held.
# n -> non-consuming, key/mouse events will be passed to the active window in addition to triggering the dispatcher.
# m -> mouse, see below.
# t -> transparent, cannot be shadowed by other binds.
# i -> ignore mods, will ignore modifiers.
# s -> separate, will arbitrarily combine keys between each mod/key, see [Keysym combos](#keysym-combos) above.
# d -> has description, will allow you to write a description for your bind.
# p -> bypasses the app's requests to inhibit keybinds.

# hyprswitch
    $key = tab
    $reverse = shift

    bind = alt, $key, exec, hyprswitch gui --mod-key alt_l --key $key --close mod-key-release --reverse-key=mod=$reverse && hyprswitch dispatch
    bind = alt $reverse, $key, exec, hyprswitch gui --mod-key alt_l --key $key --close mod-key-release --reverse-key=mod=$reverse && hyprswitch dispatch -r

# overview
    # bind = $mainMod, I, overview:toggle

### record
    bind = SUPER SHIFT, R, pass, ^(com\.obsproject\.Studio)$

### stop recording
    bind = SUPER SHIFT, D, pass, ^(com\.obsproject\.Studio)$

### minimize window
    bind = $mainMod, S, togglespecialworkspace, magic
    bind = $mainMod, S, movetoworkspace, +0
    bind = $mainMod, S, togglespecialworkspace, magic
    bind = $mainMod, S, movetoworkspace, special:magic
    bind = $mainMod, S, togglespecialworkspace, magic

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
    bind = ALT, F4, exec, hyprctl kill
    bind = ALT, XF86AudioMicMute, exec, hyprctl kill # my mic mute key is at the same place as the F4 key
    bind = $mainMod, C, killactive,

    # bind = $mainMod, M, exit,
    # bind = $mainMod, E, exec, $fileManager
    bind = $mainMod, V, togglefloating,
    bind = $mainMod, P, pseudo, # dwindle
    bind = $mainMod, I, togglesplit, # dwindle

# Switch workspaces with mainMod + [0-9]
    # focusworkspaceoncurrentmonitor split:workspace
    bind = $mainMod, 1, split:workspace, 1 
    bind = $mainMod, 2, split:workspace, 2
    bind = $mainMod, 3, split:workspace, 3
    bind = $mainMod, 4, split:workspace, 4
    bind = $mainMod, 5, split:workspace, 5
    bind = $mainMod, 6, split:workspace, 6
    bind = $mainMod, 7, split:workspace, 7
    bind = $mainMod, 8, split:workspace, 8
    bind = $mainMod, 9, split:workspace, 9
    bind = $mainMod, 0, split:workspace, 10

# moves to the second monitor (ONLY WORKS IF YOU HAVE TWO MONITORS AND YOU HAVE MY HYPRSPLIT FORK INSTALLED)
    bind = $mainMod CTRL, 1, split:other_monitor_workspace, 11 
    bind = $mainMod CTRL, 2, split:other_monitor_workspace, 12
    bind = $mainMod CTRL, 3, split:other_monitor_workspace, 13
    bind = $mainMod CTRL, 4, split:other_monitor_workspace, 14
    bind = $mainMod CTRL, 5, split:other_monitor_workspace, 15
    bind = $mainMod CTRL, 6, split:other_monitor_workspace, 16
    bind = $mainMod CTRL, 7, split:other_monitor_workspace, 17
    bind = $mainMod CTRL, 8, split:other_monitor_workspace, 18
    bind = $mainMod CTRL, 9, split:other_monitor_workspace, 19
    bind = $mainMod CTRL, 0, split:other_monitor_workspace, 20

# Opens the terminal on special:terminals if it's not running already
# If it is running, it will toggle the workspace open
    bind = $mainMod, Q, exec, ~/.config/hypr/scripts/hypr-toggle-workspace-or-run special:terminals $terminal
# split:movetoworkspace,
    bind = $mainMod SHIFT, Q, movetoworkspace, special:terminals

    bind = $mainMod, Z, exec, ~/.config/hypr/scripts/hypr-toggle-workspace-or-run special:terminals $terminal
    bind = $mainMod SHIFT, Z, movetoworkspace, special:terminals

# Opens obsidian on special:obsidian if it's not running already
# If it is running, it will toggle the workspace open
    bind = $mainMod, W, exec, ~/.config/hypr/scripts/hypr-toggle-workspace-or-run special:obsidian obsidian
    bind = $mainMod SHIFT, W, movetoworkspace, special:obsidian

    bind = $mainMod, X, exec, ~/.config/hypr/scripts/hypr-toggle-workspace-or-run special:obsidian obsidian
    bind = $mainMod SHIFT, X, movetoworkspace, special:obsidian

# Same as those above but for the file manager
    bind = $mainMod, E, exec, ~/.config/hypr/scripts/hypr-toggle-workspace-or-run special:filemanager $fileManager
    bind = $mainMod SHIFT, E, movetoworkspace, special:filemanager

# Workaround to make special workspaces close when trying to go to a normal workspace
    bind = $mainMod, 1, exec, ~/.config/hypr/scripts/hypr-close-special
    bind = $mainMod, 2, exec, ~/.config/hypr/scripts/hypr-close-special
    bind = $mainMod, 3, exec, ~/.config/hypr/scripts/hypr-close-special
    bind = $mainMod, 4, exec, ~/.config/hypr/scripts/hypr-close-special
    bind = $mainMod, 5, exec, ~/.config/hypr/scripts/hypr-close-special
    bind = $mainMod, 6, exec, ~/.config/hypr/scripts/hypr-close-special
    bind = $mainMod, 7, exec, ~/.config/hypr/scripts/hypr-close-special
    bind = $mainMod, 8, exec, ~/.config/hypr/scripts/hypr-close-special
    bind = $mainMod, 9, exec, ~/.config/hypr/scripts/hypr-close-special
    bind = $mainMod, 0, exec, ~/.config/hypr/scripts/hypr-close-special

# Move active window to a workspace with mainMod + SHIFT + [0-9]
    bind = $mainMod SHIFT, 1, split:movetoworkspace, 1
    bind = $mainMod SHIFT, 2, split:movetoworkspace, 2
    bind = $mainMod SHIFT, 3, split:movetoworkspace, 3
    bind = $mainMod SHIFT, 4, split:movetoworkspace, 4
    bind = $mainMod SHIFT, 5, split:movetoworkspace, 5
    bind = $mainMod SHIFT, 6, split:movetoworkspace, 6
    bind = $mainMod SHIFT, 7, split:movetoworkspace, 7
    bind = $mainMod SHIFT, 8, split:movetoworkspace, 8
    bind = $mainMod SHIFT, 9, split:movetoworkspace, 9
    bind = $mainMod SHIFT, 0, split:movetoworkspace, 10

# Example special workspace (scratchpad)
   # bind = $mainMod, Z, togglespecialworkspace, magic
   # bind = $mainMod SHIFT, Q, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
    bind = $mainMod, mouse_down, workspace, e+1
    bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
    bindm = $mainMod, mouse:272, movewindow
    bindm = $mainMod, mouse:273, resizewindow

### custom ###

## HOW TO USE AN ANDROID PHONE CAMERA (see arch wiki for more details)
# modprobe v4l2loopback exclusive_caps=1
# $ ffmpeg -i http://192.168.1.xxx:8080/video -vf format=yuv420p -f v4l2 /dev/video0
#
    bind = $mainMod SHIFT, V, exec, cliphist list | rofi -dmenu | cliphist decode | wl-copy

    bind = , XF86PowerOff, exec, systemctl suspend-then-hibernate

# Menus
    bind = ALT_L, SPACE, exec, $menu
    bind = $mainMod, D, exec, $powerMenu
    bind = ALT_L, PERIOD, exec, $emojiMenu

# App shortcuts
    bind = CTRL SUPER, T, exec, $terminal
    bind = $mainMod, F, fullscreen, 1
    # bind = $mainMod, F, exec, hyprctl activeworkspace -j | jq '.id' | xargs notify-send
    # bind = $mainMod, F, layoutmsg, orientationtop # DOESNT WORK, WHY?
    # bind = $mainMod, F, exec, hyprctl fullscreen 1
    bind = $mainMod SHIFT, F, fullscreen
    bind = CTRL SUPER, B, exec, blueman-manager
    bind = CTRL SUPER, A, exec, pavucontrol
    bind = CTRL SUPER, F, exec, firefox --new-tab --url about:newtab
    bind = CTRL SUPER, D, exec, vesktop
    bind = CTRL SUPER, P, exec, player play-pause
    bind = CTRL SHIFT, ESCAPE, exec, [float; size 85%; pin] kitty --title tskmgr -o "confirm_os_window_close=0" -o "tab_bar_style=hidden" btop
    bind = $mainMod, E, exec, 

# MONOCLE MODE (kinda?)
    bind = $mainMod, M, togglegroup

# Brightness (todo: add a pull request to swayosd to add a minimun brightness option)
    binde = ,XF86MonBrightnessDown, exec, swayosd-client --brightness lower
    binde = ,XF86MonBrightnessUp, exec, swayosd-client --brightness raise

# GoCheat (todo: configure gocheat so this keybinding is actually useful)
    bind = $mainMod, G, exec, echo 'kitty --title gocheat-toggle -o "confirm_os_window_close=0" -o "tab_bar_style=hidden" gocheat' | toggle-execute.sh

    # [float; size 70%; stayfocused; pin]
    windowrule = float,          title:^gocheat-toggle$
    windowrule = size 70%,       title:^gocheat-toggle$
    windowrule = dimaround,       title:^gocheat-toggle$
    windowrule = stayfocused,    title:^gocheat-toggle$ 
    windowrule = pin,            title:^gocheat-toggle$ 

# Calculator
    bind = CTRL SUPER, C, exec, [float; size 30%; pin] kitty --title calculator -o "confirm_os_window_close=0" -o "tab_bar_style=hidden" fend 

# Audio controls 
    binde = ,XF86AudioLowerVolume, exec, volume down
    binde = ,XF86AudioRaiseVolume, exec, volume up
    binde = CTRL SUPER, J, exec, volume down
    binde = CTRL SUPER, K, exec, volume up
    bind = CTRL SUPER, I, exec, volume mute-toggle
    bind = ,XF86AudioMute, exec, volume mute-toggle

# Microphone
    bind = ,XF86AudioMicMute, exec, microphone mute-toggle
    bind = CTRL SUPER, O, exec, microphone mute-toggle
    bind = ,KP_Subtract, exec, microphone mute-toggle

# Capslock (should work with r flag but doesn't)
    #bindr = , Caps_Lock, exec, swayosd-client --caps-lock-led input10::capslock
    # bind = , Caps_Lock, exec, swayosd-client --caps-lock-led input10::capslock
    bind = , Caps_Lock, exec, swayosd-client --caps-lock

# Suspend shortcuts
    bind = $mainMod,END, exec, systemctl suspend
# bind = $mainMod, L, exec, systemctl suspend
    bind = $mainMod + CTRL,END, exec, systemctl hibernate

# custom colorpicker script with hyprpicker
    bind = CTRL SUPER_L, L, exec, colorpicker

# Replacing ibus (NOT NECESSARY WITH grp:alt_shift_toggle OPTION)
# bindr = ALT_L, SHIFT, exec, wofi-hyprland-lang

# Open the Camera
    bind = CTRL SUPER, V, exec, cameractrlsgtk4

# bind = CTRL SUPER, O, pass, ^(vesktop)$

# Toggles waybar
    bind = $mainMod, B, exec, killall -SIGUSR1 waybar

# Move focus with mainMod + arrow keys
    bind = $mainMod, left, movefocus, l
    bind = $mainMod, right, movefocus, r
    bind = $mainMod, up, movefocus, u
    bind = $mainMod, down, movefocus, d

# Windows-like window switching
    # bind = ALT, Tab, cyclenext
    # bind = ALT, Tab, bringactivetotop
    # bind = SHIFT ALT, Tab, layoutmsg, cycleprev
    # bind = SHIFT ALT, Tab, bringactivetotop

# Alt+tab like window switching
    # bind = $mainMod, J, layoutmsg, cycleprev # DOESNT WORK, WHY??
    bind = $mainMod, J, cyclenext, prev
    bind = $mainMod, J, bringactivetotop

    # bind = $mainMod, K, layoutmsg, cyclenext # DOESNT WORK, WHY??
    bind = $mainMod, K, cyclenext 
    bind = $mainMod, K, bringactivetotop

# Use the same keys to move inside a group (IT HAS TO BE AFTER THE PREVIOUS BINDS, DUNNO WHY)
    bind = $mainMod, J, changegroupactive, b
    bind = $mainMod, K, changegroupactive, f

# Moves bewteen worksapces with H and L (ignores workspaces without windows)
    bind = $mainMod, H, workspace, e-1
    bind = $mainMod, L, workspace, e+1

# bind = $mainMod, H, workspace, e-1
# bind = $mainMod, L, workspace, e+1

# Resize windows
    binde = $mainMod SHIFT, L, resizeactive, 10 0
    binde = $mainMod SHIFT, H, resizeactive, -10 0
    binde = $mainMod SHIFT, K, resizeactive, 0 -10
    binde = $mainMod SHIFT, J, resizeactive, 0 10

# Screenshots
    bind = ,Print, exec, xscreenshot full-hypr
    bind = SHIFT, Print, exec, xscreenshot select-hypr
    bind = SUPER SHIFT, S, exec, xscreenshot select-hypr

# fn + PrtSc
    bind = ,XF86Launch2, exec, xscreenshot select-hypr

# FN emulation with Windows key
    bind = SUPER, LEFT, exec, wtype -P home
    bind = SUPER, RIGHT, exec, wtype -P end

# Special thinkpad FN keys
#fn + f7 TODO: make this do something useful
    bind = ,XF86Display, exec, notify-send worked

#fn + f8 (already toggles network on and off)
# bind = ,XF86WLAN, exec, notify-send worked

#fn + f9 TODO: make this do something useful
    bind = ,XF86Tools, exec, notify-send worked

#fn + f10 (alteady toggles bluetooth on and off)  

#fn + f11 TODO: make this do something useful
    bind = ,XF86Keyboard, exec, notify-send worked

#fn + f12 (doesnt work, apparently)
# bind = ,XF86Favorites, exec, notify-send worked

bind = SUPER, F10, pass, ^(com\.obsproject\.Studio)$
